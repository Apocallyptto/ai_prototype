name: ETL
on:
  schedule: [{ cron: "0 1 * * *" }]   # every day 01:00 UTC
  workflow_dispatch: {}
jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: DB smoke test
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: |
          python - <<'PY'
          import os, psycopg2, sys
          try:
              conn = psycopg2.connect(
                  host=os.environ["DB_HOST"],
                  port=os.environ["DB_PORT"],
                  dbname=os.environ["DB_NAME"],
                  user=os.environ["DB_USER"],
                  password=os.environ["DB_PASSWORD"],
                  sslmode="require",
              )
              with conn, conn.cursor() as cur:
                  cur.execute("select 1")
                  assert cur.fetchone()[0] == 1
              print("✅ Secrets OK: DB connection succeeded.")
          except Exception as e:
              print("❌ Secrets/DB check failed:", e)
              sys.exit(1)
          PY

      - name: Run ETL (push daily PnL)
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: python etl/push_daily_pnl.py

      # optional Slack ping
      - name: Slack ping
        if: ${{ secrets.SLACK_WEBHOOK != '' }}
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        run: |
          curl -s -X POST -H 'Content-type: application/json' \
            --data '{"text":"ETL finished ✅"}' "$SLACK_WEBHOOK" >/dev/null
